       DEF  TSTLST,RSLTFL
       REF  AEQ,ABLCK
*
       REF  ARYALC,ARYADD,ARYINS,ARYDEL
       REF  ARYADR
*
       REF  BUFADR,BUFEND

TSTLST DATA TSTEND-TSTLST-2/8
* Allocate array with 2-byte elements
       DATA ALC1
       TEXT 'ALC1  '
* Allocate array with 8-byte elements
*       DATA ALC2
*       TEXT 'ALC2  '
* There is not enough space to allocate
* this array.
*       DATA ALC3
*       TEXT 'ALC3  '
TSTEND
RSLTFL BYTE RSLTFE-RSLTFL-1
       TEXT 'DSK2.TESTRESULT.TXT'
RSLTFE
       EVEN

*
* Allocate array with 2-byte elements
ALC1
* Arrange
       LI   R0,ALC1Y
       MOV  R0,@BUFADR
       LI   R0,ALC1Z
       MOV  R0,@BUFEND
* Act
* Store result address in R10
       LI   R0,1
       BLWP @ARYALC
       MOV  R0,R10
* Assert
       LI   R0,ALC1Y+>12
       MOV  R10,R1
       BLWP @AEQ
       TEXT 'R0 should return the address at which '
       TEXT 'the array was assigned to. '
       TEXT 'This the first free address in the buffer.'
       BYTE 0
       EVEN
*
       LI   R0,ALC1A
       MOV  R10,R1
       LI   R2,ALC1B-ALC1A
       BLWP @ABLCK
       TEXT 'First word should specify 0 elements '
       TEXT 'exist in the array. '
       TEXT 'Second word should specify element '
       TEXT 'length using "1" for 2 bytes. '
       TEXT '(2^1 = 2)'
       BYTE 0
       EVEN
*
       RT
* Expected array contents.
ALC1A  DATA >0000,>0001
ALC1B
* Initial buffer space
ALC1Y  DATA >8010
       BSS  >0E
       DATA >0020
       BSS  >1E
       DATA >8010
       BSS  >0E
ALC1Z

       END